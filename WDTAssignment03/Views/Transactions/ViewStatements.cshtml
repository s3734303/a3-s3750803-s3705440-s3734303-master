@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@model IPagedList<Transaction>
@{
    ViewData["Title"] = "View Transaction";
    var account = (Transaction)ViewBag.Transaction;
}

<div>

    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(x => x[0].TransactionType)</th>
            <th>@Html.DisplayNameFor(x => x[0].AccountNumber)</th>
            <th>@Html.DisplayNameFor(x => x[0].DestinationAccountNumber)</th>
            <th>@Html.DisplayNameFor(x => x[0].Amount)</th>
            <th>@Html.DisplayNameFor(x => x[0].ModifyDate)</th>
        </tr>
        @foreach (var transaction in Model)
        {
            <tr>
                <td>@Html.DisplayFor(x => transaction.TransactionType)</td>
                <td>@Html.DisplayFor(x => transaction.AccountNumber)</td>
                <td>@Html.DisplayFor(x => transaction.DestinationAccountNumber)</td>
                <td>@Html.DisplayFor(x => transaction.Amount)</td>
                <td>@Html.DisplayFor(x => transaction.ModifyDate)</td>
            </tr>
        }
    </table>

    @Html.PagedListPager(Model, page => Url.Action("View Transaction", new { page }),
        new PagedListRenderOptions
            {
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        })
</div>

<div>
    <a asp-action="Index">Back to My Statement</a>
</div>