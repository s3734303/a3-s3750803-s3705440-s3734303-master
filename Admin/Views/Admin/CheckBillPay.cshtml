@model IEnumerable<BillPayDto>
@{
    ViewData["Title"] = "CheckBillPay";
}

<h1>BPay Block/Unblock</h1>

<style>
    h1 {
        background-color: dimgrey;
    }

    th {
        background-color: darkgrey;
    }

    td {
        background-color: floralwhite;
    }

    table, th, td {
        border: 1px solid black;
    }

    td:hover {background-color: #f5f5f5;}
    td:nth-child(even) {background-color: #f2f2f2;}
</style>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BillPayId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Account.AccountNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScheduleDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Period)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifyDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            foreach (BillPayDto billPay in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => billPay.BillPayId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => billPay.AccountNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => billPay.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => billPay.ScheduleDate)
                    </td>
                    <td>
                        @{
                            string period;
                            switch (billPay.Period)
                            {
                                case PeriodType.M:
                                    period = ("Month");
                                    break;
                                case PeriodType.Q:
                                    period=("Quarter");
                                    break;
                                case PeriodType.S:
                                    period=("One-Time");
                                    break;
                                case PeriodType.Y:
                                    period=("Annual");
                                    break;
                                default:
                                    period=("ERROR");
                                    break;
                            }
                        }
                        @period
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => billPay.ModifyDate)
                    </td>
                    <td>
                        @{
                            String state;
                            if (billPay.Active)
                                state = "Active";
                            else
                                state = "Deactive";
                        }
                        <form asp-action="BlockBillPay">
                            @state
                            <input type="hidden" id="id" name="id" value="@billPay.BillPayId" />
                            <input type="submit" value="Change" />
                        </form>
                    </td>
                    <td></td>
                </tr>


            }
        }
    </tbody>
</table>

